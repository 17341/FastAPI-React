{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khale\\\\Desktop\\\\FastAPI-React\\\\frontend\\\\src\\\\components\\\\Body.jsx\";\nimport Transcription from \"./Transcription\";\nimport Handwriting from \"./Handwiriting\";\nimport Voice from \"./Voice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = ({\n  selectBody\n}) => {\n  const postTranscription = async output => {\n    const res = await fetch('http://localhost:8000/', {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(output)\n    });\n    console.log('Result : ' + res);\n  };\n\n  switch (selectBody.text) {\n    case 'Transcription':\n      return /*#__PURE__*/_jsxDEV(Transcription, {\n        handleSubmit: postTranscription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this);\n      break;\n\n    case 'Handwriting Recognition':\n      return /*#__PURE__*/_jsxDEV(Handwriting, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this);\n      break;\n\n    case 'Voice Recognition':\n      return /*#__PURE__*/_jsxDEV(Voice, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this);\n      break;\n\n    default:\n      return /*#__PURE__*/_jsxDEV(Transcription, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this);\n  }\n}; //We initialize the Body to the transcription part\n\n\n_c = Body;\nBody.defaultProps = {\n  selectBody: 'Transcription'\n};\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Users/khale/Desktop/FastAPI-React/frontend/src/components/Body.jsx"],"names":["Transcription","Handwriting","Voice","Body","selectBody","postTranscription","output","res","fetch","method","mode","headers","body","JSON","stringify","console","log","text","defaultProps"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC/B,QAAMC,iBAAiB,GAAG,MAAOC,MAAP,IAAkB;AACxC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAD,EAA2B;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,IAAI,EAAG,SAFyC;AAGhDC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAHuC;AAOhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,MAAf;AAP0C,KAA3B,CAAvB;AASAS,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAaT,GAAzB;AACH,GAXD;;AAcA,UAAQH,UAAU,CAACa,IAAnB;AACE,SAAK,eAAL;AACE,0BAAQ,QAAC,aAAD;AAAe,QAAA,YAAY,EAAEZ;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAR;AACA;;AACF,SAAK,yBAAL;AACE,0BAAQ,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AACA;;AACF,SAAK,mBAAL;AACE,0BAAQ,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AACA;;AACF;AACE,0BAAQ,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AAXJ;AAcD,CA7BD,C,CA+BA;;;KA/BMF,I;AAgCNA,IAAI,CAACe,YAAL,GAAoB;AAClBd,EAAAA,UAAU,EAAE;AADM,CAApB;AAIA,eAAeD,IAAf","sourcesContent":["import Transcription from \"./Transcription\"\r\nimport Handwriting from \"./Handwiriting\"\r\nimport Voice from \"./Voice\"\r\n\r\nconst Body = ({ selectBody }) => {\r\n  const postTranscription = async (output) => {\r\n      const res = await fetch('http://localhost:8000/', {\r\n        method: 'POST',\r\n        mode : 'no-cors',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(output),\r\n      })\r\n      console.log('Result : '+ res)\r\n  }\r\n\r\n\r\n  switch (selectBody.text) {\r\n    case 'Transcription':\r\n      return (<Transcription handleSubmit={postTranscription}/>);\r\n      break;\r\n    case 'Handwriting Recognition':\r\n      return (<Handwriting />)\r\n      break;\r\n    case 'Voice Recognition':\r\n      return (<Voice />)\r\n      break;\r\n    default:\r\n      return (<Transcription />);\r\n  }\r\n   \r\n}\r\n\r\n//We initialize the Body to the transcription part\r\nBody.defaultProps = {\r\n  selectBody: 'Transcription',\r\n}\r\n\r\nexport default Body\r\n"]},"metadata":{},"sourceType":"module"}