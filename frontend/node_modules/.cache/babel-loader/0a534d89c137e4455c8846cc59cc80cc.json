{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khale\\\\Desktop\\\\FastAPI-React\\\\frontend\\\\src\\\\components\\\\Transcription.jsx\",\n    _s = $RefreshSig$();\n\nimport Button from './Button';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transcription = () => {\n  _s();\n\n  const [input, setInput] = useState();\n  const [language, setLanguage] = useState();\n  const [output, setOutput] = useState();\n  const [speech, setSpeech] = useState();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!output) {\n      alert('Please complete all the form');\n      return;\n    }\n\n    setInput('');\n    setLanguage('');\n    setOutput('');\n    setSpeech('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Input File \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        value: input,\n        accept: \"audio/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"english\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"french\",\n          children: \"French\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"arabic\",\n          children: \"Arabic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"spanish\",\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Output File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: output,\n        placeholder: \"Add Name for File.word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Speech Time Divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: speech,\n        placeholder: \"Choose number beetween 5 and 60\",\n        min: \"5\",\n        max: \"60\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Confirm\",\n      className: \"button btn-block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Transcription, \"Q7Na8lF29hR0k9EuikrwxFld8n8=\");\n\n_c = Transcription;\nTranscription.defaultProps = {\n  language: \"english\",\n  input: \"\",\n  output: \"\",\n  speech: \"\"\n};\nexport default Transcription;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transcription\");","map":{"version":3,"sources":["C:/Users/khale/Desktop/FastAPI-React/frontend/src/components/Transcription.jsx"],"names":["Button","useState","useEffect","Transcription","input","setInput","language","setLanguage","output","setOutput","speech","setSpeech","handleSubmit","e","preventDefault","alert","defaultProps"],"mappings":"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","sourcesContent":["import Button from './Button'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst Transcription = () => {\r\n  const [input, setInput] = useState()\r\n  const [language, setLanguage] = useState()\r\n  const [output, setOutput] = useState()\r\n  const [speech, setSpeech] = useState()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!output ) {\r\n      alert('Please complete all the form')\r\n      return\r\n    }\r\n    setInput('')\r\n    setLanguage('')\r\n    setOutput('')\r\n    setSpeech('')\r\n  }\r\n  \r\n    return (\r\n      <form onSubmit = {handleSubmit} className='add-form' >\r\n        <div>\r\n          <label>Input File <br></br></label>\r\n          <input\r\n            type='file'\r\n            value={input}\r\n            accept=\"audio/*\"\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label>Language</label>\r\n          <select value={language}>\r\n            <option value =\"english\">English</option>\r\n            <option value =\"french\">French</option>\r\n            <option value =\"arabic\">Arabic</option>\r\n            <option value =\"spanish\">Spanish</option>\r\n          </select> \r\n        </div>\r\n        <div className='form-control'>\r\n          <label>Output File</label>\r\n          <input\r\n            type='text'\r\n            value={output}\r\n            placeholder='Add Name for File.word' \r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label>Speech Time Divider</label>\r\n          <input\r\n            type='number'\r\n            value={speech}\r\n            placeholder='Choose number beetween 5 and 60' \r\n            min=\"5\"\r\n            max=\"60\"\r\n          />\r\n        </div>\r\n               \r\n        <input type='submit' value='Confirm' className='button btn-block' />\r\n      </form>\r\n  \r\n    )\r\n  }\r\n\r\n  Transcription.defaultProps = {\r\n    language: \"english\",\r\n    input : \"\",\r\n    output : \"\",\r\n    speech : \"\",\r\n  }\r\n  \r\n  export default Transcription"]},"metadata":{},"sourceType":"module"}