{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khale\\\\Desktop\\\\FastAPI-React\\\\frontend\\\\src\\\\components\\\\Transcription.jsx\",\n    _s = $RefreshSig$();\n\nimport Button from './Button';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transcription = () => {\n  _s();\n\n  const [input, setInput] = useState();\n  const [language, setLanguage] = useState();\n  const [output, setOutput] = useState();\n  const [speech, setSpeech] = useState();\n  const preloadedValues = {\n    input: \"\",\n    output: \"\",\n    language: \"english\",\n    speech: \"\"\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!output || !input || !speech || !language) {\n      alert('Please complete all the form');\n      return;\n    }\n\n    console.log(input, output, language, speech);\n    setInput('');\n    setLanguage('none');\n    setOutput('');\n    setSpeech('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Input File \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"file\",\n        value: input,\n        accept: \"audio/*\",\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: register,\n        value: language,\n        onChange: e => setLanguage(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"english\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"french\",\n          children: \"French\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"arabic\",\n          children: \"Arabic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"spanish\",\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Output File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"text\",\n        value: output,\n        placeholder: \"Add Name for File.word\",\n        onChange: e => setOutput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Speech Time Divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register,\n        type: \"number\",\n        value: speech,\n        onChange: e => setSpeech(e.target.value),\n        placeholder: \"Choose number beetween 5 and 60\",\n        min: \"5\",\n        max: \"60\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Confirm\",\n      className: \"button btn-block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}; // Transcription.defaultProps = {\n// language: \"english\",\n// input : \"\",\n// output : \"\",\n// speech : \"\",\n// }\n\n\n_s(Transcription, \"Q7Na8lF29hR0k9EuikrwxFld8n8=\");\n\n_c = Transcription;\nexport default Transcription;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transcription\");","map":{"version":3,"sources":["C:/Users/khale/Desktop/FastAPI-React/frontend/src/components/Transcription.jsx"],"names":["Button","useState","useEffect","Transcription","input","setInput","language","setLanguage","output","setOutput","speech","setSpeech","preloadedValues","handleSubmit","e","preventDefault","alert","console","log","register","target","value"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AAEA,QAAMW,eAAe,GAAG;AACpBR,IAAAA,KAAK,EAAE,EADa;AAEpBI,IAAAA,MAAM,EAAE,EAFY;AAGpBF,IAAAA,QAAQ,EAAE,SAHU;AAIpBI,IAAAA,MAAM,EAAE;AAJY,GAAxB;;AAOA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACP,MAAD,IAAW,CAACJ,KAAZ,IAAqB,CAACM,MAAtB,IAAgC,CAACJ,QAArC,EAAiD;AAC/CU,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACA;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ,EAAkBI,MAAlB,EAAyBF,QAAzB,EAAkCI,MAAlC;AACAL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,MAAD,CAAX;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAZD;;AAcE,sBACE;AAAM,IAAA,QAAQ,EAAIE,YAAlB;AAAgC,IAAA,SAAS,EAAC,UAA1C;AAAA,4BACE;AAAA,8BACE;AAAA,+CAAkB;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEM,QADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEf,KAHT;AAIE,QAAA,MAAM,EAAC,SAJT;AAKE,QAAA,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAACM,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,GAAG,EAAEF,QAAb;AAAuB,QAAA,KAAK,EAAEb,QAA9B;AAAwC,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACM,MAAF,CAASC,KAAV,CAApE;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAoBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEF,QADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEX,MAHT;AAIE,QAAA,WAAW,EAAC,wBAJd;AAKE,QAAA,QAAQ,EAAGM,CAAD,IAAOL,SAAS,CAACK,CAAC,CAACM,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eA8BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEF,QADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAET,MAHT;AAIE,QAAA,QAAQ,EAAGI,CAAD,IAAOH,SAAS,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAJ5B;AAKE,QAAA,WAAW,EAAC,iCALd;AAME,QAAA,GAAG,EAAC,GANN;AAOE,QAAA,GAAG,EAAC;AAPN;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,eA2CE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAqC,MAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CA3EH,C,CA6EE;AACE;AACA;AACA;AACA;AACF;;;GAlFIlB,a;;KAAAA,a;AAoFJ,eAAeA,aAAf","sourcesContent":["import Button from './Button'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst Transcription = () => {\r\n  const [input, setInput] = useState()\r\n  const [language, setLanguage] = useState()\r\n  const [output, setOutput] = useState()\r\n  const [speech, setSpeech] = useState()\r\n\r\n  const preloadedValues = {\r\n      input: \"\",\r\n      output: \"\",\r\n      language: \"english\",\r\n      speech: \"\"\r\n    }\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!output || !input || !speech || !language  ) {\r\n      alert('Please complete all the form')\r\n      return\r\n    }\r\n    console.log(input,output,language,speech)\r\n    setInput('')\r\n    setLanguage('none')\r\n    setOutput('')\r\n    setSpeech('')\r\n  }\r\n  \r\n    return (\r\n      <form onSubmit = {handleSubmit} className='add-form' >\r\n        <div>\r\n          <label>Input File <br></br></label>\r\n          <input\r\n            ref={register}\r\n            type='file'\r\n            value={input}\r\n            accept=\"audio/*\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label>Language</label>\r\n          <select ref={register} value={language} onChange={(e) => setLanguage(e.target.value)}>\r\n            <option value =\"english\">English</option>\r\n            <option value =\"french\">French</option>\r\n            <option value =\"arabic\">Arabic</option>\r\n            <option value =\"spanish\">Spanish</option>\r\n          </select> \r\n        </div>\r\n        <div className='form-control'>\r\n          <label>Output File</label>\r\n          <input\r\n            ref={register}\r\n            type='text'\r\n            value={output}\r\n            placeholder='Add Name for File.word' \r\n            onChange={(e) => setOutput(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label>Speech Time Divider</label>\r\n          <input\r\n            ref={register}\r\n            type='number'\r\n            value={speech}\r\n            onChange={(e) => setSpeech(e.target.value)}\r\n            placeholder='Choose number beetween 5 and 60' \r\n            min=\"5\"\r\n            max=\"60\"\r\n          />\r\n        </div>\r\n               \r\n        <input type='submit' value='Confirm' className='button btn-block' />\r\n      </form>\r\n  \r\n    )\r\n  }\r\n\r\n  // Transcription.defaultProps = {\r\n    // language: \"english\",\r\n    // input : \"\",\r\n    // output : \"\",\r\n    // speech : \"\",\r\n  // }\r\n  \r\n  export default Transcription"]},"metadata":{},"sourceType":"module"}